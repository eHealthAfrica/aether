apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Chart.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        release: {{ .Chart.Version }}
    spec:
      initContainers:
      - name: init
        image: postgres:9.3-alpine
        command: ['bash', '-c', './scripts/init.sh']
        env:
        - name: PGHOST
          value: {{ .Values.RDS_HOSTNAME }}
        - name: PGUSER
          value: {{ .Values.RDS_USERNAME }}
        - name: PGPASSWORD
          value: {{ .Values.RDS_PASSWORD }}
        - name: RDS_USERNAME
          value: {{ .Values.RDS_USERNAME }}
        - name: RDS_PASSWORD
          value: {{ .Values.RDS_PASSWORD }}
        - name: RDS_DB_NAME
          value: {{ .Values.RDS_DB_NAME }}
        volumeMounts:
        - mountPath: /scripts
          name: kernel-init
        - name: {{ .Chart.Name }}
          mountPath: {{ .Values.application.data_mount }}
      containers:
      - name: {{ .Chart.Name }}
        image: "aether-kernel"
        ports:
        - containerPort: 8000
        args:
        - start_dev
        # livenessProbe:
        #   initialDelaySeconds: 15
        #   periodSeconds: 10
        #   httpGet:
        #     path: /health
        #     port: 8000
        #     httpHeaders:
        #     - name: X-Kubernetes-Health-Check
        #       value: livenessProbe
        #     - name: Host
        #       value: {{ .Values.url }}
        # readinessProbe:
        #   initialDelaySeconds: 15
        #   periodSeconds: 10
        #   httpGet:
        #     path: /health
        #     port: 8000
        #     httpHeaders:
        #     - name: X-Kubernetes-Health-Check
        #       value: check
        #     - name: Host
        #       value: {{ .Values.url }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: CAS_SERVER_URL
          value: "https://{{ .Values.ums_url }}.ehealthafrica.org"
        - name: CSRF_COOKIE_DOMAIN
          value: {{ .Values.domain }}
        - name: CSRF_TRUSTED_ORIGINS
          value: {{ .Values.trusted_origins }}
        - name: HOSTNAME
          value: "{{ .Values.url_prefix }}.{{ .Values.domain }}"
        - name: DJANGO_SECRET_KEY
          value: {{ .Values.DJANGO_SECRET_KEY }}
        - name: AETHER_KERNEL_TOKEN
          value: {{ .Values.AETHER_KERNEL_TOKEN }}
        - name: RDS_USERNAME
          value: {{ .Values.RDS_USERNAME }}
        - name: RDS_PORT
          value: {{ .Values.RDS_PORT }}
        - name: RDS_HOSTNAME
          value: {{ .Values.RDS_HOSTNAME }}
        - name: RDS_PASSWORD
          value: {{ .Values.RDS_PASSWORD }}
        - name: RDS_DB_NAME
          value: {{ .Values.RDS_DB_NAME }}
        - name: WEB_SERVER_PORT
          value: {{ .Values.WEB_SERVER_PORT }}
        volumeMounts:
        - mountPath: /var/www/static
          name: static-assets-volume
        - name: {{ .Chart.Name }}
          mountPath: {{ .Values.application.data_mount }}
      - name: db
        image: postgres:9.6
        ports:
        - containerPort: 5432
        imagePullPolicy: {{ .Values.image.pullPolicy }}
      - name: nginx
        image: nginx:stable-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/static
          name: static-assets-volume
        - mountPath: /etc/nginx/conf.d
          name: kernel-nginx-config
        - name: {{ .Chart.Name }}
          mountPath: {{ .Values.application.data_mount }}
      imagePullSecrets:
      - name: regsecret
      volumes:
      - name: {{ .Chart.Name }}
        persistentVolumeClaim:
          claimName: {{ .Chart.Name }}
      - name: static-assets-volume
        emptyDir: {}
      - name: kernel-nginx-config
        configMap:
          name: kernel-nginx-config
      - name: kernel-init
        configMap:
          name: kernel-init
          defaultMode: 0744
      restartPolicy: Always

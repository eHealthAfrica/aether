# ------------------------------------------------------------------------------
# Config file for these containers:
#
#  * Databases + NGINX + Minio + Keycloak
#  * Aether Kernel
#  * Entity Extractor
#  * ODK Module
#  * Aether UI & UI Assets
# ------------------------------------------------------------------------------

version: "2.1"

networks:
  # docker network create ${NETWORK_NAME}
  internal:
    external:
      # if this isn't explicitly set it inherits from the containing folder name (aether or not)
      name: ${NETWORK_NAME}

volumes:
  # docker volume create ${DB_VOLUME}
  database_data:
    external:
      name: ${DB_VOLUME}


services:

  # -------------------------------------
  # Databases + NGINX + Minio + Keycloak
  # -------------------------------------

  db:
    extends:
      file: ./docker-compose-base.yml
      service: postgres-base
    volumes:
      - database_data:/var/lib/postgresql/data
    networks:
      - internal

  redis:
    extends:
      file: ./docker-compose-base.yml
      service: redis-base
    networks:
      - internal

  nginx:
    extends:
      file: ./docker-compose-base.yml
      service: nginx-base
    networks:
      internal:
        ipv4_address: ${NETWORK_NGINX_IP}

  minio:
    extends:
      file: ./docker-compose-base.yml
      service: minio-base
    depends_on:
      nginx:
        condition: service_healthy
    networks:
      - internal

  keycloak:
    extends:
      file: ./docker-compose-base.yml
      service: keycloak-base
    depends_on:
      db:
        condition: service_healthy
      nginx:
        condition: service_healthy
    networks:
      - internal
    extra_hosts:
      - ${NETWORK_DOMAIN}:${NETWORK_NGINX_IP}


  # ---------------------------------
  # Entity Extractor
  # ---------------------------------

  exm:
    extends:
      file: ./docker-compose-base.yml
      service: exm-base
    depends_on:
      redis:
        condition: service_started
    networks:
      - internal


  # ---------------------------------
  # Aether Kernel
  # ---------------------------------

  kernel:
    extends:
      file: ./docker-compose-base.yml
      service: kernel-base
    depends_on:
      db:
        condition: service_healthy
      nginx:
        condition: service_healthy
      keycloak:
        condition: service_started
      minio:
        condition: service_started
      redis:
        condition: service_started
      exm:
        condition: service_started
    networks:
      - internal
    extra_hosts:
      - ${NETWORK_DOMAIN}:${NETWORK_NGINX_IP}


  # ---------------------------------
  # Aether UI
  # ---------------------------------

  ui-assets:
    extends:
      file: ./docker-compose-base.yml
      service: ui-assets-base
    networks:
      - internal

  ui:
    extends:
      file: ./docker-compose-base.yml
      service: ui-base
    depends_on:
      db:
        condition: service_healthy
      nginx:
        condition: service_healthy
      keycloak:
        condition: service_started
      kernel:
        condition: service_started
      # use this dependency with "start_dev" command and webpack (optional)
      ui-assets:
        condition: service_started
    networks:
      - internal
    extra_hosts:
      - ${NETWORK_DOMAIN}:${NETWORK_NGINX_IP}


  # ---------------------------------
  # ODK module
  # ---------------------------------

  odk:
    extends:
      file: ./docker-compose-base.yml
      service: odk-base
    depends_on:
      db:
        condition: service_healthy
      nginx:
        condition: service_healthy
      keycloak:
        condition: service_started
      minio:
        condition: service_started
      kernel:
        condition: service_started
    networks:
      - internal
    extra_hosts:
      - ${NETWORK_DOMAIN}:${NETWORK_NGINX_IP}

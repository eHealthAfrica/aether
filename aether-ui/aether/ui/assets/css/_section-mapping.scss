.pipeline-section__mapping {
  background: $dark-blue;
  color: $white;

  .section-body {
    display: flex;
    flex-direction: column;
    padding: 2rem 0;
  }

  .rules {
    padding: $unit $unit-xl;
  }

  .rule {
    display: flex;
    flex-wrap: wrap;
    margin: .6rem 0;
    justify-content: space-between;

    input {
      padding: .4rem .8rem;
      height: 32px;
      background: none;
      box-shadow: none;
      width: 100%;
      position: relative;
      z-index: 1;

      &::Placeholder {
        color: rgba($white, .4);
      }
    }

    .btn {
      margin: .2rem 0;
    }
  }

  .rule-input {
    flex: 1 1 auto;
    margin: .2rem 1rem .2rem 0;
    background-color: darken($dark-blue, 5);
    box-shadow: 1px 1px 1px rgba($black, .2) inset, 1px 1px 0 rgba($white, .1);
    height: 32px;
    position: relative;

    &::before {
      content: '';
      display: block;
      width: 24px;
      height: 24px;
      position: absolute;
      top: 4px;
      transform: rotate(45deg);
    }
  }

  .rule-input.source {
    border-radius: $border-radius * 2 0 0 $border-radius * 2;
    z-index: 1;

    &::before {
      right: -11px;
      background-color: darken($dark-blue, 5);
      border-right: 1px solid rgba($white, .2);
      border-top: 1px solid rgba($white, .1);
    }
  }

  .rule-input.destination {
    border-radius: 0 $border-radius * 2 $border-radius * 2 0;

    input {
      padding-left: 1.6rem;
    }

    &::before {
      left: -11px;
      background-color: $dark-blue;
      border-right: 1px solid rgba($black, .4);
      border-top: 1px solid rgba($black, .3);
    }
  }

  .definition {
    padding: $unit $unit-xl;
    margin-top: auto;

    .definition-code {
      @include shadow-flat-dark;
      padding: 1rem;
      border-radius: $border-radius;
    }
  }
}

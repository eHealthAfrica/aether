version: 2.1

orbs:
  docker: circleci/docker@0.5.13

commands:
  test-container:
    description: "Run container tests"
    parameters:
      container:
        description: "Container to test"
        type: string
    steps:
      - checkout
      - run:
          name: tests
          command: ./.circleci/test_ci.sh << parameters.container >>
      - run:
          name: failure
          command: ./.circleci/test_ci_failure.sh << parameters.container >>
          when: on_fail

jobs:
  test-core:
    description: "Aether CORE tests (Kernel, Client)"
    executor: docker/machine
    steps:
      - test-container:
          container: core

  test-modules:
    description: "Aether modules tests (ODK and CouchDB-Sync)"
    executor: docker/machine
    steps:
      - test-container:
          container: modules

  test-ui:
    description: "Aether UI tests (UI Module)"
    executor: docker/machine
    steps:
      - test-container:
          container: ui

  test-integration:
    description: "Integration tests (Kernel with Kakfa/Zookeeper and Producer)"
    executor: docker/machine
    steps:
      - test-container:
          container: integration

  release:
    description: "Push images to Docker Hub"
    executor: docker/machine
    steps:
      - checkout
      - run: ./.circleci/release.sh

  deploy:
    description: "Push images to Google Cloud"
    executor: docker/machine
    steps:
      - checkout
      - run: ./.circleci/deploy.sh

workflows:
  version: 2
  test-release-and-deploy:
    jobs:
      - test-core
      - test-modules
      - test-ui
      - test-integration

      - release:
          # if tests successful
          requires:
            - test-core
            - test-modules
            - test-ui
            - test-integration
          filters:
            # release only in:
            #  branch   develop
            #  branch   release-#.#
            #  tag      #.#.#
            tags:
              only: /^[0-9]+(\.[0-9]+){2}$/
            branches:
              only:
                - develop
                - /^release\-[0-9]+\.[0-9]+$/

      - deploy:
          requires:
            - release

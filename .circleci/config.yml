version: 2.1

orbs:
  docker: circleci/docker@0.5.13

jobs:

  # Running core tests
  test-core:
    executor: docker/machine
    environment:
      TEST_MODE: core
    steps:
      - checkout
      - run:
          name: Aether CORE tests (Kernel, Client)
          # command: ./scripts/test_travis.sh $TEST_MODE
          command: echo "$TEST_MODE"
      - run:
          name: Upload Failed Tests
          command: ./scripts/test_travis_failure.sh $TEST_MODE
          when: on_fail

  # Running module tests
  test-modules:
    executor: docker/machine
    environment:
      TEST_MODE: modules
    steps:
      - checkout
      - run:
          name: Aether modules tests (ODK and CouchDB-Sync)
          # command: ./scripts/test_travis.sh $TEST_MODE
          command: echo "$TEST_MODE"
      - run:
          name: Upload Failed Tests
          command: ./scripts/test_travis_failure.sh $TEST_MODE
          when: on_fail

  # running UI tests
  test-ui:
    executor: docker/machine
    environment:
      TEST_MODE: ui
    steps:
      - checkout
      - run:
          name: Aether UI tests (UI Module)
          # command: ./scripts/test_travis.sh $TEST_MODE
          command: echo "$TEST_MODE"
      - run:
          name: Upload Failed Tests
          command: ./scripts/test_travis_failure.sh $TEST_MODE
          when: on_fail

  # runing integration tests
  test-integration:
    executor: docker/machine
    environment:
      TEST_MODE: integration
    steps:
      - checkout
      - run:
          name: Aether UI tests (UI Module)
          # command: ./scripts/test_travis.sh $TEST_MODE
          command: echo "$TEST_MODE"
      - run:
          name: Upload Failed Tests
          command: ./scripts/test_travis_failure.sh $TEST_MODE
          when: on_fail

  # deploy if tests successful
  deploy:
    executor: docker/machine
    steps:
      - checkout
      - run:
          name: Aether release
          # command: ./scripts/release.sh
          command: echo "after tests..."


workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test-core
      - test-modules
      - test-ui
      - test-integration

      - deploy:
          requires:
            - test-core
            - test-modules
            - test-ui
            - test-integration
          # filter:
          #   # release only in:
          #   #  branch   develop
          #   #  branch   release-#.#
          #   #  tag      #.#.#
          #   tags:
          #     only: /^[0-9]+(\.[0-9]+){2}$/
          #   branches:
          #     only:
          #       - develop
          #       - /^release\-[0-9]+\.[0-9]+$/

version: 2.1

orbs:
  docker: circleci/docker@0.5.13

jobs:

  # Running core tests
  test-core:
    executor: docker/machine
    environment:
      TEST_MODE: core
    steps:
      - checkout
      - run:
          name: Aether CORE tests (Kernel, Client)
          command: ./.circleci/test_ci.sh $TEST_MODE
      - run:
          name: Upload Failed Tests
          command: ./.circleci/test_ci_failure.sh $TEST_MODE
          when: on_fail

  # Running module tests
  test-modules:
    executor: docker/machine
    environment:
      TEST_MODE: modules
    steps:
      - checkout
      - run:
          name: Aether modules tests (ODK and CouchDB-Sync)
          command: ./.circleci/test_ci.sh $TEST_MODE
      - run:
          name: Upload Failed Tests
          command: ./.circleci/test_ci_failure.sh $TEST_MODE
          when: on_fail

  # Running UI tests
  test-ui:
    executor: docker/machine
    environment:
      TEST_MODE: ui
    steps:
      - checkout
      - run:
          name: Aether UI tests (UI Module)
          command: ./.circleci/test_ci.sh $TEST_MODE
      - run:
          name: Upload Failed Tests
          command: ./.circleci/test_ci_failure.sh $TEST_MODE
          when: on_fail

  # Runing integration tests
  test-integration:
    executor: docker/machine
    environment:
      TEST_MODE: integration
    steps:
      - checkout
      - run:
          name: Integration tests
          command: ./.circleci/test_ci.sh $TEST_MODE
      - run:
          name: Upload Failed Tests
          command: ./.circleci/test_ci_failure.sh $TEST_MODE
          when: on_fail

  release:
    executor: docker/machine
    steps:
      - checkout
      - run:
          name: Push images to Docker Hub
          command: ./.circleci/release.sh

  deploy:
    executor: docker/machine
    steps:
      - checkout
      - run:
          name: Push images to Google Cloud
          command: ./.circleci/deploy.sh

workflows:
  version: 2
  test-release-and-deploy:
    jobs:
      - test-core
      - test-modules
      - test-ui
      - test-integration

      - release:
          # if tests successful
          requires:
            - test-core
            - test-modules
            - test-ui
            - test-integration
          filters:
            # release only in:
            #  branch   develop
            #  branch   release-#.#
            #  tag      #.#.#
            tags:
              only: /^[0-9]+(\.[0-9]+){2}$/
            branches:
              only:
                - develop
                - /^release\-[0-9]+\.[0-9]+$/

      - deploy:
          requires:
            - release

@mixin margin($dir: right) {
    margin-#{$dir}: 10px;
}

.or-appearance-horizontal {
    .option-wrapper {
        @include display-flex;

        @include flex-wrap(wrap);

        @include flex-direction(row);
    }

    label, .filler {
        @include flex(1 0 30%);
    }

    .filler, .filler:hover, .filler:focus {
        border: none !important;
        background: transparent !important;
    }
}

.or-appearance-horizontal-compact {
    // the flexiness is only for appearance=random
    .option-wrapper {
        @include display-flex;

        @include flex-wrap(wrap);

        @include flex-direction(row);
    }

    label {
        display: inline-block;
    }
}

.touch {
    // this ridiculous not:() specificity is required to combat an aggressive rule in _main.scss
    .question:not(.or-appearance-compact):not(.or-appearance-quickcompact):not(.or-appearance-label):not(.or-appearance-list-nolabel):not(.or-appearance-likert) {
        &.or-appearance-horizontal, &.or-appearance-horizontal-compact {
            .option-wrapper > label {
                @include margin(right);
            }
        }
    }

    .or[dir=rtl] {
        // this ridiculous not:() specificity is required to combat an aggressive rule in _main.scss
        .question:not(.or-appearance-compact):not(.or-appearance-quickcompact):not(.or-appearance-label):not(.or-appearance-list-nolabel):not(.or-appearance-likert) {
            &.or-appearance-horizontal, &.or-appearance-horizontal-compact {
                .option-wrapper > label {
                    @include margin(left);

                    margin-right: inherit;
                }
            }
        }
    }
}

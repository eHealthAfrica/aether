version: '2.1'

networks:
  # docker network create aether_internal
  internal:
    external:
      # if this isn't explicitly set it inherits from the containing folder name (aether or not)
      name: aether_internal

services:
  # Auth mediator
  auth:
    build: ./aether-auth
    depends_on:
      kong:
        condition: service_started
      keycloak:
        condition: service_started
    environment:
      BASE_HOST: ${BASE_HOST}
      KEYCLOAK_GLOBAL_ADMIN: ${KEYCLOAK_GLOBAL_ADMIN}
      KEYCLOAK_GLOBAL_PASSWORD: ${KEYCLOAK_GLOBAL_PASSWORD}
      KEYCLOAK_INTERNAL: ${KEYCLOAK_INTERNAL}
      KONG_INTERNAL: ${KONG_INTERNAL}
      
    command: start
    networks:
      - internal

  kong-migrations:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    command: kong migrations bootstrap
    depends_on:
      kongpg:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kongpg
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
    links:
      - kongpg:kongpg
    networks:
      - internal

  kong:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    depends_on:
      kongpg:
        condition: service_healthy
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_CASSANDRA_CONTACT_POINTS: db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kongpg
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:80
    links:
      - kongpg:kongpg
    ports:
      - "80:80/tcp"
      - "8001:8001/tcp"
      - "8443:8443/tcp"
      - "8444:8444/tcp"
    networks:
      - internal

  kongpg:
    image: postgres:9.5
    environment:
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_PASSWORD: ${KONG_PG_PASSWORD:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    stdin_open: true
    tty: true
    networks:
      - internal

  keycloakpg:
    image: postgres:9.5
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: ${KEYCLOAK_PG_PASSWORD}
    networks:
    - internal

  keycloak:
    build: ./aether-auth/keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloakpg
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: ${KEYCLOAK_PG_PASSWORD}
      KEYCLOAK_USER: ${KEYCLOAK_GLOBAL_ADMIN}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_GLOBAL_PASSWORD}
      PROXY_ADDRESS_FORWARDING: 'true'
      PROXY_PORT_FORWARDING: 'true'
      
    ports:
      - 8080:8080
    depends_on:
      - keycloakpg
    networks:
      - internal        

[uwsgi]
callable          = application
master            = true

processes         = 4
if-env            = UWSGI_PROCESSES
processes         = $(UWSGI_PROCESSES)
endif             =

enable-threads    = true
threads           = %k
if-env            = UWSGI_THREADS
threads           = $(UWSGI_THREADS)
endif             =

threads-stacksize = 512
if-env            = UWSGI_THREADS_STACKSIZE
threads-stacksize = $(UWSGI_THREADS_STACKSIZE)
endif             =

offload-threads   = %k
if-env            = UWSGI_OFFLOAD_THREADS
offload-threads   = $(UWSGI_OFFLOAD_THREADS)
endif             =

# up to 65535 (64k)
buffer-size       = 65535
post-buffering    = 65535

gid               = aether
uid               = aether

safe-pidfile      = /var/run/aether/uwsgi.pid
touch-reload      = /var/run/aether/uwsgi.pid

chdir             = /code/
module            = django.core.wsgi:get_wsgi_application()

# Logging
disable-logging   = true
if-env            = UWSGI_ENABLE_LOGGING
disable-logging   = false
endif             =

log-4xx           = true
log-5xx           = true

http              = 0.0.0.0:$(WEB_SERVER_PORT)


# ------------------------------------------------------------------------------
if-env            = CUSTOM_UWSGI_SERVE_STATIC
static-expires    = /* 7776000
static-map        = $(STATIC_URL)=$(STATIC_ROOT)
route             = */favicon.ico$ static:$(STATIC_ROOT)/aether/images/aether.ico
endif             =
# ------------------------------------------------------------------------------


# Exit instead of brutal reload on SIGTERM.
die-on-term       = true
# Try to remove all of the generated files/sockets.
vacuum            = true
# Automatically kill workers if master dies (can be dangerous for availability)
no-orphans        = true
# Set close-on-exec on connection sockets (could be required for spawning processes in requests)
close-on-exec     = true
# http://uwsgi-docs.readthedocs.org/en/latest/articles/SerializingAccept.html
thunder-lock      = true

# https://www.techatbloomberg.com/blog/configuring-uwsgi-production-deployment/
strict              = true
need-app            = true
single-interpreter  = true

max-requests        = 1000  ; Restart workers after this many requests
max-worker-lifetime = 3600  ; Restart workers after this many seconds
reload-on-rss       = 2048  ; Restart workers after this much resident memory
worker-reload-mercy = 60    ; How long to wait before forcefully killing workers

# https://uwsgi-docs.readthedocs.io/

# Generated by Django 2.1.8 on 2019-04-05 07:37

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    def migrate_ProjectSchema_to_SchemaDecorator(apps, schema_editor):
        ProjectSchemas = apps.get_model('kernel', 'ProjectSchema')
        SchemaDecorators = apps.get_model('kernel', 'SchemaDecorator')
        if ProjectSchemas:
            for projectschema in ProjectSchemas.objects.all():
                SchemaDecorators.objects.create(
                    name=projectschema.name,
                    project=projectschema.project,
                    schema=projectschema.schema,
                    mandatory_fields=projectschema.mandatory_fields,
                    transport_rule=projectschema.transport_rule,
                    masked_fields=projectschema.masked_fields,
                    is_encrypted=projectschema.is_encrypted,
                    id=projectschema.id,
                    revision=projectschema.revision,
                )

    dependencies = [
        ('kernel', '0101_name_not_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='SchemaDecorator',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
                ('mandatory_fields', models.TextField(blank=True, null=True, verbose_name='mandatory fields')),
                ('transport_rule', models.TextField(blank=True, null=True, verbose_name='transport rule')),
                ('masked_fields', models.TextField(blank=True, null=True, verbose_name='masked fields')),
                ('is_encrypted', models.BooleanField(default=False, verbose_name='encrypted?')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schemadecorators', to='kernel.Project', verbose_name='project')),
                ('schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schemadecorators', to='kernel.Schema', verbose_name='schema')),
            ],
            options={
                'verbose_name': 'project schema',
                'verbose_name_plural': 'project schemas',
                'ordering': ['project__id', '-modified'],
                'default_related_name': 'schemadecorators',
            },
        ),
        migrations.RemoveField(
            model_name='projectschema',
            name='project',
        ),
        migrations.RemoveField(
            model_name='projectschema',
            name='schema',
        ),
        migrations.RemoveField(
            model_name='entity',
            name='projectschema',
        ),
        migrations.RemoveField(
            model_name='mapping',
            name='projectschemas',
        ),
        migrations.DeleteModel(
            name='ProjectSchema',
        ),
        migrations.AddField(
            model_name='entity',
            name='schemadecorator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='entities', to='kernel.SchemaDecorator', verbose_name='project schema'),
        ),
        migrations.AddField(
            model_name='mapping',
            name='schemadecorators',
            field=models.ManyToManyField(blank=True, editable=False, related_name='mappings', to='kernel.SchemaDecorator', verbose_name='schema decorators'),
        ),
        migrations.AddIndex(
            model_name='schemadecorator',
            index=models.Index(fields=['project', '-modified'], name='kernel_sche_project_49476e_idx'),
        ),
        migrations.AddIndex(
            model_name='schemadecorator',
            index=models.Index(fields=['-modified'], name='kernel_sche_modifie_7a154a_idx'),
        ),
    ]

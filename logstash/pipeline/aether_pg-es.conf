input {
    jdbc {
        jdbc_connection_string => "jdbc:postgresql://db:5432/aether?user=postgres"
        jdbc_user => "postgres"
        jdbc_validate_connection => true
        jdbc_driver_library => "/aether/drivers/postgresql-42.1.4.jar"
        jdbc_driver_class => "org.postgresql.Driver"
        statement => "SELECT e.id, e.revision, e.payload, s.name, s.revision from kernel_entity e inner join kernel_projectschema ps on e.projectschema_id = ps.id inner join kernel_schema s on ps.schema_id = s.id "
        schedule => "*/5 * * * * *"
    }
}

filter {
    mutate {
        add_field => {
          "json" => ["%{payload}"]
        }
    }
    json {
        "source" => "[json]"
        "target" => "[payload]"
      }
    if [name] == "Location" {
	    mutate {
            add_field => {
              "location" => ["%{[payload][lat]} , %{[payload][lng]}"]
            }
	    }
    }
    if [name] == "Household" {
	    mutate {
            add_field => {
              "parent" => "%{[payload][locationID]}"
            }
	    }
    }
    if [name] == "Person" {
	    mutate {
            add_field => {
              "parent" => "%{[payload][householdID]}"
            }
	    }
    }
  mutate {
    add_field => { "lower_name" => "%{name}" }
  }
  mutate {
    lowercase => [ "lower_name" ]
    remove_field => ["json"]
  }
}

output {
    stdout { codec => rubydebug }

    if [parent]{
        elasticsearch {
            index => "aether-demo-2"
            document_type => "%{lower_name}"
            document_id => "%{id}"
            parent => "%{parent}"
            hosts => "http://elasticsearch:9200"
            doc_as_upsert => true
        }
    } else {
            elasticsearch {
            index => "aether-demo-2"
            document_type => "%{lower_name}"
            document_id => "%{id}"
            hosts => "http://elasticsearch:9200"
            doc_as_upsert => true
        }
    }
}

# ------------------------------------------------------------------------------
# Base settings for these containers:
#
#  * Databases + NGINX containers (use same settings in all files)
#  * Aether Kernel
#  * ODK Module
#  * CouchDB Sync Module
#
# These container will be extended in the other DC files with dependencies and networks.
# Volumes and environment variables can be overriden in those files too.
# See more in: https://docs.docker.com/compose/extends/
# ------------------------------------------------------------------------------

version: "2.1"

services:

  # ---------------------------------
  # Database + Kong + NGINX containers
  # ---------------------------------

  postgres-base:
    image: postgres:9.6    
    env_file:
      - .env
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong

  kong-migration-base:
    image: kong
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=db
    command: kong migrations up

  kong-base:
    image: kong
    restart: on-failure
    ports:
      - 8449:8449
      - 8001:8001
      - ${KONG_PORT}:${KONG_PORT}
    environment:
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PROXY_LISTEN_SSL=0.0.0.0:8449
      - KONG_PROXY_LISTEN=0.0.0.0:${KONG_PORT}
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=db

  kongfig:
    build:
      context: aether-kongfig
      args:
        KONG_CONSUMER: ${KONG_CONSUMER}
        KONG_APIKEY: ${KONG_APIKEY}
        PROJECT_API_URL: ${PROJECT_API_URL}
        KONG_OAUTH2_PROVISION_KEY: ${KONG_OAUTH2_PROVISION_KEY}
    image: mashupmill/kongfig
    command: --path /config.yml --host kong:8001

  couchdb-base:
    image: couchdb:1.7.1
    env_file:
      - .env
    environment:
      COUCHDB_USER: admin
      COUCHDB_PASSWORD: secret
    volumes:
      # enable cors for mobile app in-browser development:
      - ./aether-couchdb-sync-module/couchdb/conf/config.ini:/usr/local/etc/couchdb/local.ini
    ports:
      - "5984:5984"

  redis-base:
    image: redis:alpine

  nginx-base:
    image: nginx:stable-alpine
    env_file:
      - .env
    volumes:
      # local setup
      - ./local-setup/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./local-setup/nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./tmp/nginx:/var/log/nginx/

      # aether favicon
      - ./local-setup/aether.ico:/media/eather.ico

      # media folders per container
      - ./tmp/kernel:/media/kernel
      - ./tmp/odk:/media/odk
      - ./tmp/sync:/media/sync
    ports:
      - "8080:8080"
    expose:
      - 8000
      - 8449
      - 8001
      - 8444
      - ${KONG_PORT}


  # ---------------------------------
  # Aether Kernel
  # ---------------------------------

  kernel-base:
    build: aether-kernel
    image: aether-kernel
    stdin_open: true
    tty: true
    env_file:
      - .env
    environment:
      CAS_SERVER_URL: https://ums-dev.ehealthafrica.org
      CSRF_COOKIE_DOMAIN: .${PROJECT_URL}
      DEBUG: "true"
      HOSTNAME: ${PROJECT_API_URL}/aether
      KONG_OAUTH2_PROVISION_KEY: ${KONG_OAUTH2_PROVISION_KEY}
      RDS_DB_NAME: aether
      RDS_HOSTNAME: db
      RDS_PASSWORD: ""
      RDS_PORT: 5432
      RDS_USERNAME: postgres

      WEB_SERVER_PORT: 8000
    volumes:
      - ./aether-kernel:/code
      # media folder
      - ./tmp/kernel:/media
    ports:
      - "8000:8000"
    command: start_dev


  # ---------------------------------
  # ODK module
  # ---------------------------------

  odk-base:
    build: aether-odk-module
    image: aether-odk
    stdin_open: true
    tty: true
    env_file:
      - .env
    environment:
      CAS_SERVER_URL: https://ums-dev.ehealthafrica.org
      CSRF_COOKIE_DOMAIN: .aether.local
      DEBUG: "true"
      HOSTNAME: ${PROJECT_API_URL}/odk

      AETHER_KERNEL_TOKEN: a2d6bc20ad16ec8e715f2f42f54eb00cbbea2d24
      AETHER_KERNEL_URL: http://kernel:8000
      AETHER_KERNEL_URL_TEST: http://kernel-test:9000

      RDS_DB_NAME: odk
      RDS_HOSTNAME: db
      RDS_PASSWORD: ""
      RDS_PORT: 5432
      RDS_USERNAME: postgres

      WEB_SERVER_PORT: 8443
    volumes:
      - ./aether-odk-module:/code
      # media folder
      - ./tmp/odk:/media
    ports:
      - "8443:8443"
    command: start_dev


  # ---------------------------------
  # CouchDB Sync module
  # ---------------------------------

  couchdb-sync-base:
    build: aether-couchdb-sync-module
    image: aether-couchdb-sync
    stdin_open: true
    tty: true
    env_file:
      - .env
    environment: &sync-environment
      CAS_SERVER_URL: https://ums-dev.ehealthafrica.org
      CSRF_COOKIE_DOMAIN: .aether.local
      DEBUG: "true"
      HOSTNAME: sync.aether.local

      COUCHDB_PASSWORD: secret
      COUCHDB_URL: http://couchdb:5984
      COUCHDB_USER: admin

      AETHER_KERNEL_TOKEN: a2d6bc20ad16ec8e715f2f42f54eb00cbbea2d24
      AETHER_KERNEL_URL: http://kernel:8000
      AETHER_KERNEL_URL_TEST: http://kernel-test:9000

      GOOGLE_CLIENT_ID: "${GOOGLE_CLIENT_ID}"

      RDS_DB_NAME: couchdb-sync
      RDS_HOSTNAME: db
      RDS_PASSWORD: ""
      RDS_PORT: 5432
      RDS_USERNAME: postgres

      REDIS_DB: 0
      REDIS_HOST: redis
      REDIS_PASSWORD: ""
      REDIS_PORT: 6379

      WEB_SERVER_PORT: 8666
    volumes: &sync-volumes
      - ./aether-couchdb-sync-module:/code
      # media folder
      - ./tmp/sync:/media
    ports:
      - "8666:8666"
    command: start_dev

  couchdb-sync-rq-base:
    image: aether-couchdb-sync
    env_file:
      - .env
    environment: *sync-environment
    volumes: *sync-volumes
    command: start_rq

  # ---------------------------------
  # Aether UI module
  # ---------------------------------

  ui-base:
    image: ui
    stdin_open: true
    tty: true
    build:
      context: ./aether-ui
      dockerfile: aether/Dockerfile
    env_file:
      - .env
    environment: &ui-environment
      CAS_SERVER_URL: https://ums-dev.ehealthafrica.org
      CSRF_COOKIE_DOMAIN: .aether.local
      DEBUG: "true"
      HOSTNAME: ui.aether.local
      STATIC_ROOT: /code/ui/assets/bundles

      AETHER_KERNEL_TOKEN: a2d6bc20ad16ec8e715f2f42f54eb00cbbea2d24
      AETHER_KERNEL_URL: http://api.aether.local/aether
      AETHER_KERNEL_URL_TEST: http://kernel-test:9000

      AETHER_MODULES: "kernel,odk,"

      RDS_DB_NAME: ui
      RDS_HOSTNAME: db
      RDS_PASSWORD: ""
      RDS_PORT: 5432
      RDS_USERNAME: postgres

      CSV_HEADER_RULES: replace;.;:;
      CSV_HEADER_RULES_SEP: ;

      WEB_SERVER_PORT: 8004

      REACT_ENV: 'development'
    volumes: &ui-volumes
      #################################################
      #                    WARNING                    #
      # do not include the root folder as volume or   #
      # `node_modules` folder will not be available   #
      #                                               #
      # - ./:/code # DO NOT UNCOMMENT!!!              #
      #################################################

      - ./aether-ui/conf:/code/conf
      - ./aether-ui/aether/ui:/code/ui

      - ./aether-ui/aether/entrypoint.sh:/code/entrypoint.sh
      - ./aether-ui/aether/manage.py:/code/manage.py
      - ./aether-ui/aether/package.json:/code/package.json

      # media folder
      - ./tmp/ui:/media
    ports:
      - "8004:8004"
    command: start_dev

  # ---------------------------------
  # Webpack container
  # ---------------------------------

  webpack-base:
    image: ui
    environment: *ui-environment
    volumes: *ui-volumes
    ports:
      - "3000:3000"
    command: start_webpack

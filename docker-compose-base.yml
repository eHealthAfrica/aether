# ------------------------------------------------------------------------------
# Base settings for these containers:
#
#  * Databases + NGINX containers (use same settings in all files)
#  * Aether Kernel
#  * ODK Module
#  * CouchDB Sync Module
#  * Aether UI Module
#  * Producer Module
#  * Zookeper & Kafka
#
# These container will be extended in the other DC files with dependencies and networks.
# Volumes and environment variables can be overriden in those files too.
# See more in: https://docs.docker.com/compose/extends/
# ------------------------------------------------------------------------------

version: "2.1"

services:

  # ---------------------------------
  # Database + NGINX containers
  # ---------------------------------

  postgres-base:
    image: postgres:9.6

  couchdb-base:
    image: couchdb:1.7.1
    environment:
      COUCHDB_USER: admin
      COUCHDB_PASSWORD: secret
    volumes:
      # enable cors for mobile app in-browser development:
      - ./aether-couchdb-sync-module/couchdb/conf/config.ini:/usr/local/etc/couchdb/local.ini
    ports:
      - "5984:5984"

  redis-base:
    image: redis:alpine

  nginx-base:
    image: nginx:stable-alpine
    volumes:
      # local setup
      - ./local-setup/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./local-setup/nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./tmp/nginx:/var/log/nginx/

      # aether favicon
      - ./local-setup/aether.ico:/media/eather.ico

      # media folders per container
      - ./tmp/kernel:/media/kernel
      - ./tmp/odk:/media/odk
      - ./tmp/sync:/media/sync
      # ui static files
      - ./aether-ui/aether/ui/assets/bundles:/static/ui
    ports:
      - "80:80"


  # ---------------------------------
  # Aether Kernel
  # ---------------------------------

  kernel-base:
    image: aether-kernel
    build: ./aether-kernel
    stdin_open: true
    tty: true
    environment:
      CAS_SERVER_URL: https://ums-dev.ehealthafrica.org
      CSRF_COOKIE_DOMAIN: .aether.local
      DEBUG: "true"
      DJANGO_SECRET_KEY: "secret"
      HOSTNAME: kernel.aether.local
      RDS_DB_NAME: aether
      RDS_HOSTNAME: db
      RDS_PASSWORD: ""
      RDS_PORT: 5432
      RDS_USERNAME: postgres
      WEB_SERVER_PORT: 8000
    volumes:
      - ./aether-kernel:/code
      # media folder
      - ./tmp/kernel:/media
    ports:
      - "8000:8000"
    command: start_dev


  # ---------------------------------
  # ODK module
  # ---------------------------------

  odk-base:
    image: aether-odk
    build: ./aether-odk-module
    stdin_open: true
    tty: true
    environment:
      AETHER_KERNEL_TOKEN: a2d6bc20ad16ec8e715f2f42f54eb00cbbea2d24
      AETHER_KERNEL_URL: http://kernel:8000
      AETHER_KERNEL_URL_TEST: http://kernel-test:9000
      CAS_SERVER_URL: https://ums-dev.ehealthafrica.org
      CSRF_COOKIE_DOMAIN: .aether.local
      DEBUG: "true"
      DJANGO_SECRET_KEY: "secret"
      HOSTNAME: odk.aether.local
      RDS_DB_NAME: odk
      RDS_HOSTNAME: db
      RDS_PASSWORD: ""
      RDS_PORT: 5432
      RDS_USERNAME: postgres
      WEB_SERVER_PORT: 8443
    volumes:
      - ./aether-odk-module:/code
      # media folder
      - ./tmp/odk:/media
    ports:
      - "8443:8443"
    command: start_dev


  # ---------------------------------
  # CouchDB Sync module
  # ---------------------------------

  couchdb-sync-base:
    image: aether-couchdb-sync
    build: ./aether-couchdb-sync-module
    stdin_open: true
    tty: true
    environment: &sync-environment
      AETHER_KERNEL_TOKEN: a2d6bc20ad16ec8e715f2f42f54eb00cbbea2d24
      AETHER_KERNEL_URL: http://kernel:8000
      AETHER_KERNEL_URL_TEST: http://kernel-test:9000
      CAS_SERVER_URL: https://ums-dev.ehealthafrica.org
      COUCHDB_PASSWORD: secret
      COUCHDB_URL: http://couchdb:5984
      COUCHDB_USER: admin
      CSRF_COOKIE_DOMAIN: .aether.local
      DEBUG: "true"
      DJANGO_SECRET_KEY: "secret"
      GOOGLE_CLIENT_ID: "${GOOGLE_CLIENT_ID}"
      HOSTNAME: sync.aether.local
      RDS_DB_NAME: couchdb-sync
      RDS_HOSTNAME: db
      RDS_PASSWORD: ""
      RDS_PORT: 5432
      RDS_USERNAME: postgres
      REDIS_DB: 0
      REDIS_HOST: redis
      REDIS_PASSWORD: ""
      REDIS_PORT: 6379
      WEB_SERVER_PORT: 8666
    volumes: &sync-volumes
      - ./aether-couchdb-sync-module:/code
      # media folder
      - ./tmp/sync:/media
    ports:
      - "8666:8666"
    command: start_dev

  couchdb-sync-rq-base:
    image: aether-couchdb-sync
    environment: *sync-environment
    volumes: *sync-volumes
    command: start_rq


  # ---------------------------------
  # Aether UI module
  # ---------------------------------

  ui-base:
    image: aether-ui
    build: ./aether-ui
    stdin_open: true
    tty: true
    environment:
      AETHER_KERNEL_TOKEN: a2d6bc20ad16ec8e715f2f42f54eb00cbbea2d24
      AETHER_KERNEL_URL: http://kernel:8000
      AETHER_KERNEL_URL_TEST: http://kernel-test:9000
      CAS_SERVER_URL: https://ums-dev.ehealthafrica.org
      CSRF_COOKIE_DOMAIN: .aether.local
      DEBUG: "true"
      DJANGO_SECRET_KEY: "secret"
      HOSTNAME: ui.aether.local
      RDS_DB_NAME: ui
      RDS_HOSTNAME: db
      RDS_PASSWORD: ""
      RDS_PORT: 5432
      RDS_USERNAME: postgres

      # use this value with "start_dev" command and webpack
      STATIC_ROOT: /code/aether/ui/assets/bundles

      # use this value with "start_dev" command and without webpack
      # STATIC_ROOT: /code/aether/ui/static

      WEB_SERVER_PORT: 8004
    volumes:
      - ./aether-ui:/code
    ports:
      - "8004:8004"
    command: start_dev

  ui-assets-base:
    build: ./aether-ui/aether/ui/assets
    stdin_open: true
    tty: true
    volumes:
      #################################################
      #                    WARNING                    #
      # do not include the root folder as volume or   #
      # `node_modules` folder will not be available   #
      #################################################

      # include all folders manually :'(
      - ./aether-ui/aether/ui/assets/apps:/code/apps
      - ./aether-ui/aether/ui/assets/bundles:/code/bundles
      - ./aether-ui/aether/ui/assets/conf:/code/conf
      - ./aether-ui/aether/ui/assets/css:/code/css
      - ./aether-ui/aether/ui/assets/tests:/code/tests

      - ./aether-ui/aether/ui/assets/package.json:/code/package.json
    ports:
      - "3004:3004"
    command: start_dev


  # ---------------------------------
  # Kafka & Zookeeper
  # ---------------------------------

  zookeeper-base:
    image: confluentinc/cp-zookeeper:latest
    restart: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    extra_hosts:
      - "moby:127.0.0.1"

  kafka-base:
    image: confluentinc/cp-kafka:latest
    restart: on-failure
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ADVERTISED_HOST_NAME: kafka
    extra_hosts:
      - "moby:127.0.0.1"


  # ---------------------------------
  # Aether Kafka Producer
  # ---------------------------------

  aether-producer-base:
    image: aether-producer
    build: ./aether-producer
    restart: on-failure
    stdin_open: true
    volumes:
     - ./aether-producer:/code
     - ./aether-client:/code/aether-client
    environment:
     - PYTHONUNBUFFERED=1
    command: start_dev
